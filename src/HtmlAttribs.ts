import { ListOfAttributes } from './Bulma';

type DomAttribsKeys = keyof JSX.DOMAttributes;

const attribs: DomAttribsKeys[] = [
	'onLoad',
	'onError',
	'onLoadCapture',
	'onCopy',
	'onCopyCapture',
	'onCut',
	'onCutCapture',
	'onPaste',
	'onPasteCapture',
	'onCompositionEnd',
	'onCompositionEndCapture',
	'onCompositionStart',
	'onCompositionStartCapture',
	'onCompositionUpdate',
	'onCompositionUpdateCapture',
	'onFocus',
	'onFocusCapture',
	'onBlur',
	'onBlurCapture',
	'onChange',
	'onChangeCapture',
	'onInput',
	'onInputCapture',
	'onSearch',
	'onSearchCapture',
	'onSubmit',
	'onSubmitCapture',
	'onInvalid',
	'onKeyDown',
	'onKeyDownCapture',
	'onKeyPress',
	'onKeyPressCapture',
	'onKeyUp',
	'onKeyUpCapture',
	'onAbort',
	'onAbortCapture',
	'onCanPlay',
	'onCanPlayCapture',
	'onCanPlayThrough',
	'onCanPlayThroughCapture',
	'onDurationChange',
	'onDurationChangeCapture',
	'onEmptied',
	'onEmptiedCapture',
	'onEncrypted',
	'onEncryptedCapture',
	'onEnded',
	'onEndedCapture',
	'onLoadedData',
	'onLoadedDataCapture',
	'onLoadedMetadata',
	'onLoadedMetadataCapture',
	'onLoadStart',
	'onLoadStartCapture',
	'onPause',
	'onPauseCapture',
	'onPlay',
	'onPlayCapture',
	'onPlaying',
	'onPlayingCapture',
	'onProgress',
	'onProgressCapture',
	'onRateChange',
	'onRateChangeCapture',
	'onSeeked',
	'onSeekedCapture',
	'onSeeking',
	'onSeekingCapture',
	'onStalled',
	'onStalledCapture',
	'onSuspend',
	'onSuspendCapture',
	'onTimeUpdate',
	'onTimeUpdateCapture',
	'onVolumeChange',
	'onVolumeChangeCapture',
	'onWaiting',
	'onWaitingCapture',
	'onClick',
	'onClickCapture',
	'onContextMenu',
	'onContextMenuCapture',
	'onDblClick',
	'onDblClickCapture',
	'onDrag',
	'onDragCapture',
	'onDragEnd',
	'onDragEndCapture',
	'onDragEnter',
	'onDragEnterCapture',
	'onDragExit',
	'onDragExitCapture',
	'onDragLeave',
	'onDragLeaveCapture',
	'onDragOver',
	'onDragOverCapture',
	'onDragStart',
	'onDragStartCapture',
	'onDrop',
	'onDropCapture',
	'onMouseDown',
	'onMouseDownCapture',
	'onMouseEnter',
	'onMouseEnterCapture',
	'onMouseLeave',
	'onMouseLeaveCapture',
	'onMouseMove',
	'onMouseMoveCapture',
	'onMouseOut',
	'onMouseOutCapture',
	'onMouseOver',
	'onMouseOverCapture',
	'onMouseUp',
	'onMouseUpCapture',
	'onSelect',
	'onSelectCapture',
	'onTouchCancel',
	'onTouchCancelCapture',
	'onTouchEnd',
	'onTouchEndCapture',
	'onTouchMove',
	'onTouchMoveCapture',
	'onTouchStart',
	'onTouchStartCapture',
	'onPointerOver',
	'onPointerOverCapture',
	'onPointerEnter',
	'onPointerEnterCapture',
	'onPointerDown',
	'onPointerDownCapture',
	'onPointerMove',
	'onPointerMoveCapture',
	'onPointerUp',
	'onPointerUpCapture',
	'onPointerCancel',
	'onPointerCancelCapture',
	'onPointerOut',
	'onPointerOutCapture',
	'onPointerLeave',
	'onPointerLeaveCapture',
	'onGotPointerCapture',
	'onGotPointerCaptureCapture',
	'onLostPointerCapture',
	'onLostPointerCaptureCapture',
	'onScroll',
	'onScrollCapture',
	'onWheel',
	'onWheelCapture',
	'onAnimationStart',
	'onAnimationStartCapture',
	'onAnimationEnd',
	'onAnimationEndCapture',
	'onAnimationIteration',
	'onAnimationIterationCapture',
	'onTransitionEnd',
	'onTransitionEndCapture'
];

export const HtmlAttribs = (self: any, props: JSX.DOMAttributes): ListOfAttributes<JSX.DOMAttributes> => {
	return attribs.map((key: DomAttribsKeys) => {
		const val = props[key];

		if (val == null || typeof val !== 'function') {
			return {};
		}

		return {
			[key]: val.bind(self)
		};
	}).reduce((prev, cur) => ({
		...prev,
		...cur
	}));
};
